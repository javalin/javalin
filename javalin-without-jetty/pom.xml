<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>javalin-parent</artifactId>
        <groupId>io.javalin</groupId>
        <version>4.0.0.ALPHA4-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>javalin-without-jetty</artifactId>

    <dependencies>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <properties>
        <javadoc.skip>false</javadoc.skip>
        <copy-build-resources.skip>false</copy-build-resources.skip>

        <original.root>../javalin/src/main/java/io/javalin</original.root>
        <hackity.hack.root>../javalin-without-jetty/target/generated-sources/src/main/java/io/javalin</hackity.hack.root>
        <javalin.original.path>${original.root}/Javalin.java</javalin.original.path>
        <javalin.hack.path>${hackity.hack.root}/Javalin.java</javalin.hack.path>
        <javalinconfig.original.path>${original.root}/core/JavalinConfig.java</javalinconfig.original.path>
        <javalinconfig.hack.path>${hackity.hack.root}/core/JavalinConfig.java</javalinconfig.hack.path>
        <context.original.path>${original.root}/http/Context.kt</context.original.path>
        <context.hack.path>${hackity.hack.root}/http/Context.kt</context.hack.path>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <exclude>org.slf4j</exclude>
                                    <exclude>javax.servlet</exclude>
                                    <exclude>org.jetbrains.kotlin</exclude>
                                    <exclude>org.jetbrains:annotations</exclude>
                                    <exclude>org.jetbrains:annotations</exclude>
                                    <exclude>org.eclipse.*</exclude>
                                    <exclude>javax.servlet</exclude>
                                </excludes>
                            </artifactSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration><!-- @formatter:off -->
                            <target name="hacky-mchackface">
                                <!-- Javalin.java -->
                                <copy file="${javalin.original.path}" tofile="${javalin.hack.path}" />
                                <replace file="${javalin.hack.path}" token="protected JavalinJettyServlet javalinJettyServlet" value="private JavalinJettyServlet javalinJettyServlet" />
                                <replace file="${javalin.hack.path}" token="protected JettyServer jettyServer" value="private JettyServer jettyServer" />
                                <replace file="${javalin.hack.path}" token="public JettyServer jettyServer() {" value="private JettyServer jettyServer() {" />
                                <replace file="${javalin.hack.path}" token="public Javalin ws(" value="private Javalin ws(" />
                                <replace file="${javalin.hack.path}" token="public Javalin wsBefore(" value="private Javalin wsBefore(" />
                                <replace file="${javalin.hack.path}" token="public Javalin wsAfter(" value="private Javalin wsAfter(" />
                                <replace file="${javalin.hack.path}" token="public &lt;T extends Exception&gt; Javalin wsException(" value="private &lt;T extends Exception&gt; Javalin wsException(" />
                                <replace file="${javalin.hack.path}" token="public Javalin(" value="private Javalin(" />
                                <replace file="${javalin.hack.path}" token="public static Javalin create(" value="private static Javalin create(" />
                                <replace file="${javalin.hack.path}" token="public Javalin start(" value="private Javalin start(" />
                                <replace file="${javalin.hack.path}" token="public Javalin stop(" value="private Javalin stop(" />
                                <replace file="${javalin.hack.path}" token="public int port(" value="private int port(" />
                                <!-- JavalinConfig.java -->
                                <copy file="${javalinconfig.original.path}" tofile="${javalinconfig.hack.path}" />
                                <replace file="${javalinconfig.hack.path}" token="public void addStaticFiles(" value="private void addStaticFiles(" />
                                <replace file="${javalinconfig.hack.path}" token="public void sessionHandler(" value="private void sessionHandler(" />
                                <replace file="${javalinconfig.hack.path}" token="public void wsFactoryConfig(" value="private void wsFactoryConfig(" />
                                <replace file="${javalinconfig.hack.path}" token="public void wsLogger(" value="private void wsLogger(" />
                                <replace file="${javalinconfig.hack.path}" token="public void enableWebjars()" value="private void enableWebjars()" />
                                <replace file="${javalinconfig.hack.path}" token="public void enableDevLogging()" value="private void enableDevLogging()" />
                                <replace file="${javalinconfig.hack.path}" token="public void server(" value="private void server(" />
                                <replace file="${javalinconfig.hack.path}" token="public void configureServletContextHandler(" value="private void configureServletContextHandler(" />
                                <!-- Context.kt -->
                                <!-- This stopped working for some reason -->
<!--                                <copy file="${context.original.path}" tofile="${context.hack.path}" />-->
<!--                                <replace file="${context.hack.path}" token="fun uploadedFile(" value="private fun uploadedFile(" />-->
<!--                                <replace file="${context.hack.path}" token="fun uploadedFiles(" value="private fun uploadedFiles(" />-->
                            </target>
                        </configuration><!-- @formatter:on -->
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/target/generated-sources/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <!-- Workaround for bug in Kotlin compiler: https://youtrack.jetbrains.com/issue/KT-29475 -->
                                <arg>-Xsanitize-parentheses</arg>
                            </args>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <sourcepath>${original.root}</sourcepath>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
